- name: configuring backend server
  hosts: backend
  become: yes
  vars:
    sql_root_password: "ExpenseApp@1"
    mysql_host: "mysql.nhari.online"
  tasks:
  - name: disable default nodejs
    ansible.builtin.command: dnf module disable nodejs -y

  - name: enable nodejs 20
    ansible.builtin.command: dnf module enable nodejs:20 -y

  - name: install nodejs
    ansible.builtin.package:
      name: nodejs
      state: present

  - name: create expense user
    ansible.builtin.user:
      name: expense

  - name: create app directory
    ansible.builtin.file:
      path: /app
      state: directory

  - name: download backend code
    ansible.builtin.get_url:
      url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
      dest: /tmp/backend.zip

  - name: extract code
    ansible.builtin.unarchive:
      src: /tmp/backend.zip #by default ansible thinks this is in remote server
      dest: /app
      remote_src: yes
  
  - name: install dependencies
    ansible.builtin.command: npm install
    args:
      chdir: /app

  - name: copy backend service
    ansible.builtin.copy:
      src: backend.service
      dest: /etc/systemd/system/backend.service

  - name: install pymysql
    ansible.builtin.pip:
      name:
      - PyMySQL
      executable: pip3.9

  - name: connect mysql server
    community.mysql.mysql_db:
      login_user: root
      login_password: "{{ sql_root_password }}"
      login_host: "{{ mysql_host }}"
      target: /app/schema/backend.sql
      state: dump
      name: all